name: terraform-plan
author: ktoyod
description: execute terraform plan and show results
inputs:
  terraform-home-directory:
    description: The directory where terraform files are located
    required: true
  terraform-exec-directory:
    description: The directory where terraform is executed
    required: true
  terraform-version:
    description: The version of terraform to use
    required: true
    default: 1.3.7

runs:
  using: composite
  steps:
    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ inputs.terraform-version }}
    - name: terraform fmt
      id: fmt
      shell: bash
      run: terraform fmt -check -recursive
      continue-on-error: true
      working-directory: ${{ inputs.terraform-home-directory }}
    - name: terraform init
      id: init
      shell: bash
      run: terraform init
      working-directory: ${{ inputs.terraform-exec-directory }}
    - name: terraform validate
      id: validate
      shell: bash
      run: terraform validate -no-color
      working-directory: ${{ inputs.terraform-home-directory }}
    - name: terraform plan
      id: plan
      shell: bash
      run: terraform plan -no-color
      working-directory: ${{ inputs.terraform-exec-directory }}
      continue-on-error: true

    - uses: actions/github-script@v6
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        script: |
          const output = `
          #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details>
          <summary>Show Plan</summary>

          \`\`\`
          ${process.env.PLAN}
          \`\`\`

          </details>
          `;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
